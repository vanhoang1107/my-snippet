version: '3.5'
services:
  zk1:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}.{{.Task.Slot}}"
    env_file: zookeeper.env
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: 0.0.0.0:2888:3888;zk2:2888:3888;zk3:2888:3888
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == main
      restart_policy:
        condition: any
    networks:
      - kafka
    volumes:
      - /data/kafka/zk/:/var/lib/zookeeper/data/:Z
      - /var/log/kafka/zk/:/var/lib/zookeeper/log/:Z

  zk2:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}.{{.Task.Slot}}"
    env_file: zookeeper.env
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zk1:2888:3888;0.0.0.0:2888:3888;zk3:2888:3888
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == app1
      restart_policy:
        condition: any
    networks:
      - kafka
    volumes:
      - /data/kafka/zk/:/var/lib/zookeeper/data/:Z
      - /var/log/kafka/zk/:/var/lib/zookeeper/log/:Z

  zk3:
    image: confluentinc/cp-zookeeper:6.2.0
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}.{{.Task.Slot}}"
    env_file: zookeeper.env
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zk1:2888:3888;zk2:2888:3888;0.0.0.0:2888:3888
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == app2
      restart_policy:
        condition: any
    networks:
      - kafka
    volumes:
      - /data/kafka/zk/:/var/lib/zookeeper/data/:Z
      - /var/log/kafka/zk/:/var/lib/zookeeper/log/:Z

  kafka1:
    image: confluentinc/cp-kafka:6.2.0
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}.{{.Task.Slot}}"
    depends_on:
      - zk1
      - zk2
      - zk3
    env_file: broker.env
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://0.0.0.0:9092,LISTENER_EXTERNAL://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka1:9092,LISTENER_EXTERNAL://kafka1:9091
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == main
      restart_policy:
        condition: any
    networks:
      - kafka
      - my-app
    volumes:
      - /data/kafka/kafka/:/var/lib/kafka/:Z

  kafka2:
    image: confluentinc/cp-kafka:6.2.0
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}.{{.Task.Slot}}"
    depends_on:
      - zk1
      - zk2
      - zk3
    env_file: broker.env
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://0.0.0.0:9092,LISTENER_EXTERNAL://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka2:9092,LISTENER_EXTERNAL://kafka2:9091
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == app1
      restart_policy:
        condition: any
    networks:
      - kafka
      - my-app
    volumes:
      - /data/kafka/kafka/:/var/lib/kafka/:Z

  kafka3:
    image: confluentinc/cp-kafka:6.2.0
    hostname: "{{.Node.Hostname}}.{{.Service.Name}}.{{.Task.Slot}}"
    depends_on:
      - zk1
      - zk2
      - zk3
    env_file: broker.env
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://0.0.0.0:9092,LISTENER_EXTERNAL://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka3:9092,LISTENER_EXTERNAL://kafka3:9091
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == app2
      restart_policy:
        condition: any
    networks:
      - kafka
      - my-app
    volumes:
      - /data/kafka/kafka/:/var/lib/kafka/:Z

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.2.0
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    environment:
      PORT: 9021
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      CONTROL_CENTER_REPLICATION_FACTOR: 3
      CONFLUENT_METRICS_TOPIC_REPLICATION: 3
    deploy:
      replicas: 1
      update_config:
        order: stop-first
      placement:
        constraints:
          - node.labels.alias == main
      restart_policy:
        condition: any
      labels:
        traefik.enable: "true"
        traefik.docker.network: web
        traefik.http.routers.kafka-ui.rule: Host(`kafka-ui.my-app.local`)
        traefik.http.routers.kafka-ui.entrypoints: web
        traefik.http.services.kafka-ui.loadbalancer.server.port: 9021
    ulimits:
      nofile:
        soft: 16384
        hard: 16384
    networks:
      - kafka
      - web
    volumes:
      - /data/kafka/control-center/:/var/lib/confluent-control-center/:Z

networks:
  kafka:
    external: true
  web:
    external: true
  my-app:
    external: true
